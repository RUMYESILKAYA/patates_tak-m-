import streamlit as st
import pandas as pd
import time

# BaÅŸlÄ±k
st.title("Patates AyÄ±klama Takip Sistemi ğŸ¥”")
st.write("Bu panelde banttan geÃ§en patateslerin ayÄ±klanma durumlarÄ±nÄ± takip edebilirsiniz.")

# Saatler listesi
saatler = ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00']

# DataFrame'i session_state iÃ§inde boÅŸ baÅŸlat
if "df" not in st.session_state:
    st.session_state.df = pd.DataFrame(columns=["Saatler", "Toplam AyÄ±klanan", "Ã‡Ã¼rÃ¼k Patates", "SaÄŸlam Patates"])

# KullanÄ±cÄ± Veri GiriÅŸi
with st.form(key='patates_form'):
    st.subheader("Veri GiriÅŸi")
    saat = st.selectbox("Saat SeÃ§in", saatler)
    toplam_ayiklanan = st.number_input("Toplam AyÄ±klanan Patates", min_value=0)
    curuk_patates = st.number_input("Ã‡Ã¼rÃ¼k Patates", min_value=0)
    if st.form_submit_button("Verileri Kaydet"):
        saglam_patates = toplam_ayiklanan - curuk_patates
        new_row = pd.DataFrame([{
            "Saatler": saat,
            "Toplam AyÄ±klanan": toplam_ayiklanan, 
            "Ã‡Ã¼rÃ¼k Patates": curuk_patates,
            "SaÄŸlam Patates": saglam_patates
        }])
        st.session_state.df = pd.concat([st.session_state.df, new_row], ignore_index=True)
        st.success(f"{saat} iÃ§in veriler kaydedildi!")

# EÄŸer hiÃ§ veri yoksa uyarÄ± gÃ¶sterelim
if st.session_state.df.empty:
    st.info("HenÃ¼z veri girilmedi.")
else:
    # Grafik
    st.subheader("Saatlik AyÄ±klanan Patatesler GrafiÄŸi")
    st.line_chart(st.session_state.df.set_index("Saatler")[["Toplam AyÄ±klanan", "Ã‡Ã¼rÃ¼k Patates", "SaÄŸlam Patates"]])

    # Tablo
    st.subheader("DetaylÄ± Saatlik Rapor")
    st.dataframe(st.session_state.df)

    # Rapor Ã–zeti
    st.subheader("Toplam Ä°statistikler ğŸ“Š")
    st.metric(label="Toplam AyÄ±klanan Patates", value=sum(st.session_state.df["Toplam AyÄ±klanan"]))
    st.metric(label="Toplam Ã‡Ã¼rÃ¼k Patates", value=sum(st.session_state.df["Ã‡Ã¼rÃ¼k Patates"]))
    st.metric(label="Toplam SaÄŸlam Patates", value=sum(st.session_state.df["SaÄŸlam Patates"]))

    # Zaman Ã‡izelgesi
    st.subheader("Zaman Ã‡izelgesi")
    st.line_chart(st.session_state.df.set_index("Saatler")[["Toplam AyÄ±klanan"]])

    # GeliÅŸmiÅŸ Ä°statistikler
    st.subheader("GeliÅŸmiÅŸ Ä°statistikler")
    st.write(f"Ã‡Ã¼rÃ¼k Patateslerin OranÄ±: {sum(st.session_state.df['Ã‡Ã¼rÃ¼k Patates']) / sum(st.session_state.df['Toplam AyÄ±klanan']):.2%}")

# Ä°lerleme Ã‡ubuÄŸu
if 'progress' not in st.session_state:
    st.session_state.progress = 0

if st.session_state.progress < 100:
    st.session_state.progress += 1
    progress_bar = st.progress(st.session_state.progress)
    time.sleep(0.05)

# Veri YÃ¼kleme
st.subheader("Veri YÃ¼kle")
uploaded_file = st.file_uploader("Veri YÃ¼kle", type=["csv", "xlsx"])
if uploaded_file is not None:
    st.session_state.df = pd.read_csv(uploaded_file)
    st.success("Yeni veri baÅŸarÄ±yla yÃ¼klendi!")

# Veriyi CSV Olarak Ä°ndirme
st.subheader("Veri Ä°ndirme")
st.download_button(
    label="Veriyi CSV Olarak Ä°ndir",
    data=st.session_state.df.to_csv(index=False),
    file_name="patates_ayiklama.csv",
    mime="text/csv"
)

# UyarÄ±lar
if not st.session_state.df.empty and sum(st.session_state.df["Ã‡Ã¼rÃ¼k Patates"]) > 100:
    st.warning("Ã‡Ã¼rÃ¼k patates sayÄ±sÄ± yÃ¼ksek! Dikkatli olmanÄ±z gerekebilir.")

